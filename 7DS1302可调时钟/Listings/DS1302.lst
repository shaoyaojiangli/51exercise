C51 COMPILER V9.60.7.0   DS1302                                                            08/09/2023 17:32:57 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE DS1302
OBJECT MODULE PLACED IN .\Objects\DS1302.obj
COMPILER INVOKED BY: D:\keil5\C51\BIN\C51.EXE DS1302\DS1302.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\LCD1602;.\DS1302;.\Delay
                    -;.\key;.\time) DEBUG OBJECTEXTEND PRINT(.\Listings\DS1302.lst) OBJECT(.\Objects\DS1302.obj)

line level    source

   1          #include <REGX52.H>
   2          
   3          sbit DS1302_SCLK = P3^6;
   4          sbit DS1302_IO = P3^4;
   5          sbit DS1302_CE = P3^5;
   6          
   7          #define DS1302_SECOND 0x80    //秒
   8          #define DS1302_MINUTE 0x82    //分
   9          #define DS1302_HOUR   0x84    //时
  10          #define DS1302_DATE   0x86    //日
  11          #define DS1302_MONTH  0x88    //月
  12          #define DS1302_YEAR   0x8C    //年
  13          #define DS1302_DAY    0x8A    //星期
  14          #define DS1302_WP     0x8E    //写入保护
  15          
  16          
  17          unsigned char DS1302_Time[] = {19,11,16,12,59,55,6}; 
  18          
  19          //初始化
  20          void DS1302_Init()
  21          {
  22   1          DS1302_CE = 0;
  23   1          DS1302_SCLK = 0;
  24   1      }
  25          //写操作
  26          void DS1302_WriteByte(unsigned char Command,Data)
  27          {
  28   1          unsigned char i;
  29   1          DS1302_CE = 1;
  30   1          for(i = 0; i < 8; i++)
  31   1          {
  32   2              DS1302_IO = Command & (0x01 << i);
  33   2              DS1302_SCLK = 1;
  34   2              //可能要加延时
  35   2              DS1302_SCLK = 0;
  36   2          }
  37   1          
  38   1          for(i = 0; i < 8; i++)
  39   1          {
  40   2              DS1302_IO = Data & (0x01 << i);
  41   2              DS1302_SCLK = 1;
  42   2              //可能要加延时
  43   2              DS1302_SCLK = 0;
  44   2          }
  45   1         
  46   1         DS1302_CE = 0;
  47   1          
  48   1      }
  49          
  50          //读操作
  51          unsigned char DS1302_ReadByte(unsigned char Command)
  52          {
  53   1           unsigned char i,Data = 0x00; 
  54   1           Command |= 0x01;
C51 COMPILER V9.60.7.0   DS1302                                                            08/09/2023 17:32:57 PAGE 2   

  55   1           DS1302_CE = 1;
  56   1           for(i = 0; i < 8; i++)
  57   1          {
  58   2              DS1302_IO = Command & (0x01 << i);
  59   2              DS1302_SCLK = 0;
  60   2              //可能要加延时
  61   2              DS1302_SCLK = 1;
  62   2          }
  63   1          
  64   1          
  65   1          for(i = 0; i < 8; i++)
  66   1          {
  67   2              DS1302_SCLK = 1;
  68   2              DS1302_SCLK = 0;
  69   2              if(DS1302_IO){Data |= (0x01 << i);}
  70   2          }
  71   1          DS1302_CE = 0;
  72   1          DS1302_IO = 0;
  73   1          return Data;
  74   1      }
  75          
  76          
  77          void DS1302_SetTime()
  78          {
  79   1          DS1302_WriteByte(DS1302_WP,0x00);//关闭写保护
  80   1          DS1302_WriteByte(DS1302_YEAR,DS1302_Time[0] / 10 * 16 + DS1302_Time[0] % 10);
  81   1          DS1302_WriteByte(DS1302_MONTH,DS1302_Time[0] / 10 * 16 + DS1302_Time[1] % 10);
  82   1          DS1302_WriteByte(DS1302_DATE,DS1302_Time[0] / 10 * 16 + DS1302_Time[2] % 10);
  83   1          DS1302_WriteByte(DS1302_HOUR,DS1302_Time[0] / 10 * 16 + DS1302_Time[3] % 10);
  84   1          DS1302_WriteByte(DS1302_MINUTE,DS1302_Time[0] / 10 * 16 + DS1302_Time[4] % 10);
  85   1          DS1302_WriteByte(DS1302_SECOND,DS1302_Time[0] / 10 * 16 + DS1302_Time[5] % 10);
  86   1          DS1302_WriteByte(DS1302_DAY,DS1302_Time[0] / 10 * 16 + DS1302_Time[6] % 10);
  87   1          DS1302_WriteByte(DS1302_WP,0x80);//打开写保护
  88   1          
  89   1          
  90   1      }
  91          
  92          void DS1302_ReadTime()
  93              
  94          {
  95   1          unsigned char Temp;
  96   1          Temp = DS1302_ReadByte(DS1302_YEAR);
  97   1          DS1302_Time[0] = Temp / 16 * 10 + Temp % 16;
  98   1          
  99   1          Temp = DS1302_ReadByte(DS1302_MONTH);
 100   1          DS1302_Time[1] = Temp / 16 * 10 + Temp % 16;
 101   1          
 102   1          Temp = DS1302_ReadByte(DS1302_DATE);
 103   1          DS1302_Time[2] = Temp / 16 * 10 + Temp % 16;
 104   1          
 105   1          Temp = DS1302_ReadByte(DS1302_HOUR);
 106   1          DS1302_Time[3] = Temp / 16 * 10 + Temp % 16;
 107   1          
 108   1          Temp = DS1302_ReadByte(DS1302_MINUTE);
 109   1          DS1302_Time[4] = Temp / 16 * 10 + Temp % 16;
 110   1          
 111   1          Temp = DS1302_ReadByte(DS1302_SECOND);
 112   1          DS1302_Time[5] = Temp / 16 * 10 + Temp % 16;
 113   1          
 114   1          Temp = DS1302_ReadByte(DS1302_DAY);
 115   1          DS1302_Time[6] = Temp / 16 * 10 + Temp % 16;
 116   1      }
C51 COMPILER V9.60.7.0   DS1302                                                            08/09/2023 17:32:57 PAGE 3   



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    551    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      7       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
