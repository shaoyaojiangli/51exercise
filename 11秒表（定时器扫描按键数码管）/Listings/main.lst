C51 COMPILER V9.60.7.0   MAIN                                                              08/13/2023 00:04:36 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\keil5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Delay;.\key;.\nixie;.\time;.\I2C;
                    -.\AT24C02) DEBUG OBJECTEXTEND PRINT(.\Listings\main.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <REGX52.H>
   2          #include "time0.h"
   3          #include "key.h"
   4          #include "Nixie.h"
   5          #include "Delay.h"
   6          #include "AT24C02.h"
   7          
   8          unsigned char KeyNum;
   9          unsigned char Min,Sec,MiniSec;
  10          unsigned char RunFlag =0;
  11          
  12          int main()
  13          {
  14   1          Timer0_Init();
  15   1          while(1)
  16   1          {
  17   2              KeyNum = Key();
  18   2              if(KeyNum == 1)
  19   2              {
  20   3                  RunFlag = !RunFlag;
  21   3              }
  22   2               if(KeyNum == 2)
  23   2              {
  24   3                  Min = 0;
  25   3                  Sec = 0;
  26   3                  MiniSec = 0;
  27   3              }
  28   2               if(KeyNum == 3)
  29   2              {
  30   3                 AT24C02_WriteByte(0,Min);
  31   3                  Delay(5);
  32   3                    AT24C02_WriteByte(1,Sec);
  33   3                  Delay(5);
  34   3                    AT24C02_WriteByte(2,MiniSec);
  35   3                  Delay(5);
  36   3              }
  37   2               if(KeyNum == 4)
  38   2              {
  39   3                 Min = AT24C02_ReadByte(0);
  40   3                   Sec = AT24C02_ReadByte(1);
  41   3                   MiniSec = AT24C02_ReadByte(2);
  42   3              }
  43   2                  Nixie_SetBuf(1,Min / 10);
  44   2                  Nixie_SetBuf(2,Min % 10);
  45   2                  Nixie_SetBuf(3,11);
  46   2                   Nixie_SetBuf(4,Sec / 10);
  47   2                  Nixie_SetBuf(5,Sec % 10);
  48   2                  Nixie_SetBuf(6,11);
  49   2                   Nixie_SetBuf(7,MiniSec / 10);
  50   2                  Nixie_SetBuf(8,MiniSec % 10);
  51   2                  
  52   2              
  53   2            
  54   2          }
C51 COMPILER V9.60.7.0   MAIN                                                              08/13/2023 00:04:36 PAGE 2   

  55   1      }
  56          void Sec_Loop()
  57          {
  58   1          if(RunFlag)
  59   1          {
  60   2              
  61   2              MiniSec++;
  62   2              if(MiniSec >= 100)
  63   2              {
  64   3                  MiniSec = 0;
  65   3                  Sec++;
  66   3                  if(Sec >= 60)
  67   3                  {
  68   4                      Sec = 0;
  69   4                      if(Min >= 60)
  70   4                      {
  71   5                         Min = 0; 
  72   5                      }
  73   4                  }
  74   3              }
  75   2          }
  76   1      }
  77          
  78          
  79          void Timer0_Routine() interrupt 1
  80          {
  81   1          static unsigned int T0Count1 = 0;
  82   1          static unsigned int T0Count2 = 0;
  83   1          static unsigned int T0Count3 = 0;
  84   1          TH0 = 0xFC;
  85   1          TL0 = 0x18;
  86   1          T0Count1++;
  87   1          if(T0Count1 >= 20)
  88   1          {
  89   2              T0Count1 = 0;
  90   2              Key_Loop();
  91   2          }
  92   1          
  93   1          
  94   1          T0Count2++;
  95   1          if(T0Count2>= 2)
  96   1          {
  97   2              T0Count2 = 0;
  98   2             Nixie_Loop();
  99   2          }
 100   1           T0Count3++;
 101   1          if(T0Count3>= 10)
 102   1          {
 103   2              T0Count3 = 0;
 104   2             Sec_Loop();
 105   2          }
 106   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    408    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     11    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
C51 COMPILER V9.60.7.0   MAIN                                                              08/13/2023 00:04:36 PAGE 3   

END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
